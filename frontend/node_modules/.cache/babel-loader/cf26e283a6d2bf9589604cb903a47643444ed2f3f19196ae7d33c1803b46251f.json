{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:5000/api/products\";\n\n// Hàm lấy token từ localStorage (tránh lặp lại code)\nconst getAuthHeaders = () => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    console.error(\"⚠ Không tìm thấy token trong localStorage!\");\n    return null;\n  }\n  return {\n    Authorization: `Bearer ${token}`,\n    \"Content-Type\": \"multipart/form-data\"\n  };\n};\n\n// Lấy danh sách tất cả sản phẩm\nexport const getProducts = async () => {\n  try {\n    const res = await axios.get(API_URL);\n    return res.data;\n  } catch (error) {\n    var _error$response;\n    console.error(\"Lỗi khi lấy danh sách sản phẩm:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    return [];\n  }\n};\n\n// Lấy thông tin chi tiết một sản phẩm theo ID\nexport const getProductById = async id => {\n  try {\n    const res = await axios.get(`${API_URL}/${id}`);\n    return res.data;\n  } catch (error) {\n    var _error$response2;\n    console.error(`Lỗi khi lấy sản phẩm ID ${id}:`, ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n    return null; // Tránh lỗi khi không tìm thấy sản phẩm\n  }\n};\n\n// Thêm sản phẩm mới\nexport const createProduct = async productData => {\n  const headers = getAuthHeaders();\n  if (!headers) return;\n  try {\n    let formData = new FormData();\n    formData.append(\"name\", productData.name);\n    formData.append(\"price\", productData.price);\n    formData.append(\"stock\", productData.stock);\n    formData.append(\"description\", productData.description);\n\n    // Chuyển `size` thành JSON trước khi gửi\n    formData.append(\"size\", JSON.stringify(productData.size.split(\",\").map(s => Number(s.trim()))));\n\n    // Chuyển `colors` thành JSON trước khi gửi\n    formData.append(\"colors\", JSON.stringify(productData.colors.split(\",\").map(c => c.trim())));\n    formData.append(\"brand\", productData.brand);\n    formData.append(\"category\", productData.category);\n    if (productData.image) {\n      formData.append(\"image\", productData.image);\n    }\n    const res = await axios.post(API_URL, formData, {\n      headers\n    });\n    console.log(\"✅ Sản phẩm được thêm thành công:\", res.data);\n    return res.data;\n  } catch (error) {\n    var _error$response3;\n    console.error(\"❌ Lỗi khi thêm sản phẩm:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n    throw error;\n  }\n};\n\n// Cập nhật sản phẩm\nexport const updateProduct = async (id, productData) => {\n  const headers = getAuthHeaders();\n  if (!headers) return;\n  try {\n    let formData = new FormData();\n    formData.append(\"name\", productData.name);\n    formData.append(\"price\", productData.price);\n    formData.append(\"stock\", productData.stock);\n    formData.append(\"description\", productData.description);\n\n    // Chuyển `size` thành JSON trước khi gửi\n    formData.append(\"size\", JSON.stringify(productData.size.split(\",\").map(s => Number(s.trim()))));\n\n    // Chuyển `colors` thành JSON trước khi gửi\n    formData.append(\"colors\", JSON.stringify(productData.colors.split(\",\").map(c => c.trim())));\n    formData.append(\"brand\", productData.brand);\n    formData.append(\"category\", productData.category);\n    if (productData.image) {\n      formData.append(\"image\", productData.image);\n    }\n    const res = await axios.put(`${API_URL}/${id}`, formData, {\n      headers\n    });\n    console.log(\"✅ Sản phẩm được cập nhật thành công:\", res.data);\n    return res.data;\n  } catch (error) {\n    var _error$response4;\n    console.error(`❌ Lỗi khi cập nhật sản phẩm ID ${id}:`, ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n    throw error;\n  }\n};\n\n// Xóa sản phẩm\nexport const deleteProduct = async id => {\n  const headers = getAuthHeaders();\n  if (!headers) return;\n  try {\n    const res = await axios.delete(`${API_URL}/${id}`, {\n      headers\n    });\n    console.log(\"✅ Sản phẩm đã bị xóa:\", res.data);\n    return res.data;\n  } catch (error) {\n    var _error$response5;\n    console.error(`❌ Lỗi khi xóa sản phẩm ID ${id}:`, ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","getAuthHeaders","token","localStorage","getItem","console","error","Authorization","getProducts","res","get","data","_error$response","response","message","getProductById","id","_error$response2","createProduct","productData","headers","formData","FormData","append","name","price","stock","description","JSON","stringify","size","split","map","s","Number","trim","colors","c","brand","category","image","post","log","_error$response3","updateProduct","put","_error$response4","deleteProduct","delete","_error$response5"],"sources":["D:/môn chiều thứ 2/DACK_CT2/frontend/src/components/services/productService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:5000/api/products\";\r\n\r\n// Hàm lấy token từ localStorage (tránh lặp lại code)\r\nconst getAuthHeaders = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n        console.error(\"⚠ Không tìm thấy token trong localStorage!\");\r\n        return null;\r\n    }\r\n    return {\r\n        Authorization: `Bearer ${token}`,\r\n        \"Content-Type\": \"multipart/form-data\",\r\n    };\r\n};\r\n\r\n// Lấy danh sách tất cả sản phẩm\r\nexport const getProducts = async () => {\r\n    try {\r\n        const res = await axios.get(API_URL);\r\n        return res.data;\r\n    } catch (error) {\r\n        console.error(\"Lỗi khi lấy danh sách sản phẩm:\", error.response?.data || error.message);\r\n        return [];\r\n    }\r\n};\r\n\r\n// Lấy thông tin chi tiết một sản phẩm theo ID\r\nexport const getProductById = async (id) => {\r\n    try {\r\n        const res = await axios.get(`${API_URL}/${id}`);\r\n        return res.data;\r\n    } catch (error) {\r\n        console.error(`Lỗi khi lấy sản phẩm ID ${id}:`, error.response?.data || error.message);\r\n        return null; // Tránh lỗi khi không tìm thấy sản phẩm\r\n    }\r\n};\r\n\r\n// Thêm sản phẩm mới\r\nexport const createProduct = async (productData) => {\r\n    const headers = getAuthHeaders();\r\n    if (!headers) return;\r\n\r\n    try {\r\n        let formData = new FormData();\r\n        formData.append(\"name\", productData.name);\r\n        formData.append(\"price\", productData.price);\r\n        formData.append(\"stock\", productData.stock);\r\n        formData.append(\"description\", productData.description);\r\n        \r\n        // Chuyển `size` thành JSON trước khi gửi\r\n        formData.append(\"size\", JSON.stringify(productData.size.split(\",\").map(s => Number(s.trim()))));\r\n        \r\n        // Chuyển `colors` thành JSON trước khi gửi\r\n        formData.append(\"colors\", JSON.stringify(productData.colors.split(\",\").map(c => c.trim())));\r\n\r\n        formData.append(\"brand\", productData.brand);\r\n        formData.append(\"category\", productData.category);\r\n\r\n        if (productData.image) {\r\n            formData.append(\"image\", productData.image);\r\n        }\r\n\r\n        const res = await axios.post(API_URL, formData, { headers });\r\n        console.log(\"✅ Sản phẩm được thêm thành công:\", res.data);\r\n        return res.data;\r\n    } catch (error) {\r\n        console.error(\"❌ Lỗi khi thêm sản phẩm:\", error.response?.data || error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Cập nhật sản phẩm\r\nexport const updateProduct = async (id, productData) => {\r\n    const headers = getAuthHeaders();\r\n    if (!headers) return;\r\n\r\n    try {\r\n        let formData = new FormData();\r\n        formData.append(\"name\", productData.name);\r\n        formData.append(\"price\", productData.price);\r\n        formData.append(\"stock\", productData.stock);\r\n        formData.append(\"description\", productData.description);\r\n\r\n        // Chuyển `size` thành JSON trước khi gửi\r\n        formData.append(\"size\", JSON.stringify(productData.size.split(\",\").map(s => Number(s.trim()))));\r\n\r\n        // Chuyển `colors` thành JSON trước khi gửi\r\n        formData.append(\"colors\", JSON.stringify(productData.colors.split(\",\").map(c => c.trim())));\r\n\r\n        formData.append(\"brand\", productData.brand);\r\n        formData.append(\"category\", productData.category);\r\n\r\n        if (productData.image) {\r\n            formData.append(\"image\", productData.image);\r\n        }\r\n\r\n        const res = await axios.put(`${API_URL}/${id}`, formData, { headers });\r\n        console.log(\"✅ Sản phẩm được cập nhật thành công:\", res.data);\r\n        return res.data;\r\n    } catch (error) {\r\n        console.error(`❌ Lỗi khi cập nhật sản phẩm ID ${id}:`, error.response?.data || error.message);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Xóa sản phẩm\r\nexport const deleteProduct = async (id) => {\r\n    const headers = getAuthHeaders();\r\n    if (!headers) return;\r\n\r\n    try {\r\n        const res = await axios.delete(`${API_URL}/${id}`, { headers });\r\n        console.log(\"✅ Sản phẩm đã bị xóa:\", res.data);\r\n        return res.data;\r\n    } catch (error) {\r\n        console.error(`❌ Lỗi khi xóa sản phẩm ID ${id}:`, error.response?.data || error.message);\r\n        throw error;\r\n    }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}