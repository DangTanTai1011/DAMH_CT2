{"ast":null,"code":"import axios from 'axios';\nconst express = require(\"express\");\nconst Cart = require(\"../models/Cart\");\nconst router = express.Router();\nrouter.get(\"/:userId\", async (req, res) => {\n  try {\n    const cart = await Cart.findOne({\n      userId: req.params.userId\n    });\n    if (!cart) {\n      return res.status(404).json({\n        message: \"Giỏ hàng trống\"\n      });\n    }\n    res.json(cart);\n  } catch (error) {\n    res.status(500).json({\n      message: \"Lỗi khi lấy giỏ hàng\",\n      error: error.message\n    });\n  }\n});\n// Hàm xóa sản phẩm khỏi giỏ hàng\nexport const removeFromCart = async (userId, productId) => {\n  try {\n    const response = await axios.post('http://localhost:5000/api/cart/remove', {\n      userId,\n      productId\n    }, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    return response.data; // Trả về message từ backend\n  } catch (error) {\n    throw error;\n  }\n};\nmodule.exports = router;","map":{"version":3,"names":["axios","express","require","Cart","router","Router","get","req","res","cart","findOne","userId","params","status","json","message","error","removeFromCart","productId","response","post","headers","Authorization","localStorage","getItem","data","module","exports"],"sources":["D:/môn chiều thứ 2/DACK_CT2/frontend/src/components/services/cartService.js"],"sourcesContent":["import axios from 'axios';\r\nconst express = require(\"express\");\r\nconst Cart = require(\"../models/Cart\");\r\nconst router = express.Router();\r\n\r\nrouter.get(\"/:userId\", async (req, res) => {\r\n    try {\r\n        const cart = await Cart.findOne({ userId: req.params.userId });\r\n        if (!cart) {\r\n            return res.status(404).json({ message: \"Giỏ hàng trống\" });\r\n        }\r\n        res.json(cart);\r\n    } catch (error) {\r\n        res.status(500).json({ message: \"Lỗi khi lấy giỏ hàng\", error: error.message });\r\n    }\r\n});\r\n// Hàm xóa sản phẩm khỏi giỏ hàng\r\nexport const removeFromCart = async (userId, productId) => {\r\n    try {\r\n        const response = await axios.post('http://localhost:5000/api/cart/remove', {\r\n            userId,\r\n            productId\r\n        }, {\r\n            headers: {\r\n                Authorization: `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n        });\r\n        return response.data;  // Trả về message từ backend\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n};\r\nmodule.exports = router;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,IAAI,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AACtC,MAAME,MAAM,GAAGH,OAAO,CAACI,MAAM,CAAC,CAAC;AAE/BD,MAAM,CAACE,GAAG,CAAC,UAAU,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EACvC,IAAI;IACA,MAAMC,IAAI,GAAG,MAAMN,IAAI,CAACO,OAAO,CAAC;MAAEC,MAAM,EAAEJ,GAAG,CAACK,MAAM,CAACD;IAAO,CAAC,CAAC;IAC9D,IAAI,CAACF,IAAI,EAAE;MACP,OAAOD,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,OAAO,EAAE;MAAiB,CAAC,CAAC;IAC9D;IACAP,GAAG,CAACM,IAAI,CAACL,IAAI,CAAC;EAClB,CAAC,CAAC,OAAOO,KAAK,EAAE;IACZR,GAAG,CAACK,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,OAAO,EAAE,sBAAsB;MAAEC,KAAK,EAAEA,KAAK,CAACD;IAAQ,CAAC,CAAC;EACnF;AACJ,CAAC,CAAC;AACF;AACA,OAAO,MAAME,cAAc,GAAG,MAAAA,CAAON,MAAM,EAAEO,SAAS,KAAK;EACvD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,uCAAuC,EAAE;MACvET,MAAM;MACNO;IACJ,CAAC,EAAE;MACCG,OAAO,EAAE;QACLC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC1D;IACJ,CAAC,CAAC;IACF,OAAOL,QAAQ,CAACM,IAAI,CAAC,CAAE;EAC3B,CAAC,CAAC,OAAOT,KAAK,EAAE;IACZ,MAAMA,KAAK;EACf;AACJ,CAAC;AACDU,MAAM,CAACC,OAAO,GAAGvB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}